Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.
思路:这道题常规解法，但是需要一些改变,因为两个string为一一对应，在确定一个string里的char为key,另一个string里的char为value,在put操作时
需要判别这个value没有被别的key对应，因为string为一一对应，平等的。
否则"ab"和"aa"就会出错。
代码:
public class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s.length() != t.length()){
            return false;
        }
        int length = s.length();
        HashMap<Character, Character> map = new HashMap<Character, Character>();
        for(int i = 0; i < length; i++){
            if(map.containsKey(s.charAt(i))){
                if(map.get(s.charAt(i)) != t.charAt(i)){
                    return false;
                }
            }else{
                if(!map.containsValue(t.charAt(i))){//需要判别这个value没有被别的key对应
                    map.put(s.charAt(i), t.charAt(i));
                }else{
                    return false;
                }
                
            }
        }
        return true;
        
    }
}
